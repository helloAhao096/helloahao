import{_ as s,o,c as a,Q as e}from"./chunks/framework.676e9b8e.js";const E=JSON.parse('{"title":"Homebrew 设置代理&国内镜像源","description":"Homebrew 设置代理&国内镜像源","frontmatter":{"title":"Homebrew 设置代理&国内镜像源","description":"Homebrew 设置代理&国内镜像源","date":"2024-05-10T00:00:00.000Z","tags":["homebrew","MacOS","proxy"]},"headers":[],"relativePath":"posts/Homebrew 设置代理&国内镜像源.md","filePath":"posts/Homebrew 设置代理&国内镜像源.md","lastUpdated":1715308316000}'),n={name:"posts/Homebrew 设置代理&国内镜像源.md"},t=e(`<blockquote><p>参考文档</p><ol><li>清华镜像 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/" target="_blank" rel="noreferrer">https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/</a></li><li>proxy代理设置</li></ol></blockquote><h2 id="设置国内镜像代理" tabindex="-1">设置国内镜像代理 <a class="header-anchor" href="#设置国内镜像代理" aria-label="Permalink to &quot;设置国内镜像代理&quot;">​</a></h2><blockquote><p>日常使用 可设置如下环境变量使用本站提供的 Homebrew 镜像：</p></blockquote><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> HOMEBREW_API_DOMAIN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> HOMEBREW_BOTTLE_DOMAIN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> HOMEBREW_BREW_GIT_REMOTE</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> HOMEBREW_CORE_GIT_REMOTE</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> HOMEBREW_PIP_INDEX_URL</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> HOMEBREW_API_DOMAIN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> HOMEBREW_BOTTLE_DOMAIN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> HOMEBREW_BREW_GIT_REMOTE</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> HOMEBREW_CORE_GIT_REMOTE</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> HOMEBREW_PIP_INDEX_URL</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span></span></code></pre></div><h3 id="重置国内镜像源" tabindex="-1">重置国内镜像源 <a class="header-anchor" href="#重置国内镜像源" aria-label="Permalink to &quot;重置国内镜像源&quot;">​</a></h3><pre><code>\`\`\`Bash
# brew 程序本身，Homebrew / Linuxbrew 相同
unset HOMEBREW_BREW_GIT_REMOTE
git -C &quot;$(brew --repo)&quot; remote set-url origin https://github.com/Homebrew/brew

# 以下针对 macOS 系统上的 Homebrew
unset HOMEBREW_API_DOMAIN
unset HOMEBREW_CORE_GIT_REMOTE
BREW_TAPS=&quot;$(BREW_TAPS=&quot;$(brew tap 2&gt;/dev/null)&quot;; echo -n &quot;\${BREW_TAPS//$&#39;\\n&#39;/:}&quot;)&quot;
for tap in core cask{,-fonts,-versions} command-not-found services; do
    if [[ &quot;:\${BREW_TAPS}:&quot; == *&quot;:homebrew/\${tap}:&quot;* ]]; then  # 只复原已安装的 Tap
        brew tap --custom-remote &quot;homebrew/\${tap}&quot; &quot;https://github.com/Homebrew/homebrew-\${tap}&quot;
    fi
done

# 重新拉取远程
brew update
\`\`\`
</code></pre><h2 id="设置proxy" tabindex="-1">设置proxy <a class="header-anchor" href="#设置proxy" aria-label="Permalink to &quot;设置proxy&quot;">​</a></h2><p>homebrew的代理直接使用的是bash的系统级代理，直接设置系统代理即可生效</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#设置HTTP/HTTPS Proxy</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> HTTP_PROXY</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">http://your_proxy_server_address:your_proxy_port</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> HTTPS_PROXY</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">http://your_proxy_server_address:your_proxy_port</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#设置HTTP/HTTPS Proxy</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> HTTP_PROXY</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">http://your_proxy_server_address:your_proxy_port</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> HTTPS_PROXY</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">http://your_proxy_server_address:your_proxy_port</span></span></code></pre></div><h3 id="重置代理" tabindex="-1">重置代理 <a class="header-anchor" href="#重置代理" aria-label="Permalink to &quot;重置代理&quot;">​</a></h3><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">unset</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">HTTP_PROXY</span></span>
<span class="line"><span style="color:#79B8FF;">unset</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">HTTPS_PROXY</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">unset</span><span style="color:#24292E;"> </span><span style="color:#032F62;">HTTP_PROXY</span></span>
<span class="line"><span style="color:#005CC5;">unset</span><span style="color:#24292E;"> </span><span style="color:#032F62;">HTTPS_PROXY</span></span></code></pre></div>`,11),p=[t];function r(l,c,i,u,h,_){return o(),a("div",null,p)}const d=s(n,[["render",r]]);export{E as __pageData,d as default};
