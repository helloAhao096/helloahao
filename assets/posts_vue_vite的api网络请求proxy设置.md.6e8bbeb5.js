import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.b1192e57.js";const B=JSON.parse('{"title":"vue&vite的api网络请求proxy设置","description":"vue&vite的api网络请求proxy设置","frontmatter":{"title":"vue&vite的api网络请求proxy设置","description":"vue&vite的api网络请求proxy设置","date":"2024-05-10T00:00:00.000Z","tags":["vue","vite"]},"headers":[],"relativePath":"posts/vue&vite的api网络请求proxy设置.md","filePath":"posts/vue&vite的api网络请求proxy设置.md","lastUpdated":1715308316000}'),l={name:"posts/vue&vite的api网络请求proxy设置.md"},o=p(`<blockquote><p>参考文档</p><ol><li><a href="https://cn.vitejs.dev/guide/env-and-mode" target="_blank" rel="noreferrer">https://cn.vitejs.dev/guide/env-and-mode</a></li><li><a href="https://zxuqian.cn/vite-proxy-config/" target="_blank" rel="noreferrer">https://zxuqian.cn/vite-proxy-config/</a></li></ol></blockquote><h2 id="vite-server-proxy设置" tabindex="-1">vite server proxy设置 <a class="header-anchor" href="#vite-server-proxy设置" aria-label="Permalink to &quot;vite server proxy设置&quot;">​</a></h2><h3 id="配置文件总览" tabindex="-1">配置文件总览 <a class="header-anchor" href="#配置文件总览" aria-label="Permalink to &quot;配置文件总览&quot;">​</a></h3><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vite.config.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">defineConfig</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">字符串简写写法：http://localhost:5173/foo</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://localhost:4567/foo</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">&#39;/foo&#39;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://localhost:4567&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">带选项写法：http://localhost:5173/api/bar</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://jsonplaceholder.typicode.com/bar</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">&#39;/api&#39;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">target:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://jsonplaceholder.typicode.com&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">changeOrigin:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">rewrite:</span><span style="color:#E1E4E8;"> (path) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">path.replace</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">/^\\/api/,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#9ECBFF;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">正则表达式写法：http://localhost:5173/fallback/</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://jsonplaceholder.typicode.com/</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">&#39;^/fallback/.*&#39;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">target:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://jsonplaceholder.typicode.com&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">changeOrigin:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">rewrite:</span><span style="color:#E1E4E8;"> (path) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> path.replace(</span><span style="color:#B392F0;">/^\\/fallback/,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">使用</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">proxy</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">实例</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">&#39;/api&#39;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">target:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://jsonplaceholder.typicode.com&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">changeOrigin:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">configure:</span><span style="color:#E1E4E8;"> (proxy, </span><span style="color:#9ECBFF;">options</span><span style="color:#E1E4E8;">) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">proxy</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">是</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http-proxy&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">的实例</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">代理</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">websockets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">或</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">socket.io</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">写法：ws://localhost:5173/socket.io</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ws://localhost:5174/socket.io</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">&#39;/socket.io&#39;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">target:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ws://localhost:5174&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">ws:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vite.config.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">字符串简写写法：http://localhost:5173/foo</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://localhost:4567/foo</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&#39;/foo&#39;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://localhost:4567&#39;,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">带选项写法：http://localhost:5173/api/bar</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://jsonplaceholder.typicode.com/bar</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&#39;/api&#39;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">target:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://jsonplaceholder.typicode.com&#39;,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">changeOrigin:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">rewrite:</span><span style="color:#24292E;"> (path) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">path.replace</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">/^\\/api/,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">正则表达式写法：http://localhost:5173/fallback/</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://jsonplaceholder.typicode.com/</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&#39;^/fallback/.*&#39;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">target:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://jsonplaceholder.typicode.com&#39;,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">changeOrigin:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">rewrite:</span><span style="color:#24292E;"> (path) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> path.replace(</span><span style="color:#6F42C1;">/^\\/fallback/,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">使用</span><span style="color:#24292E;"> </span><span style="color:#032F62;">proxy</span><span style="color:#24292E;"> </span><span style="color:#032F62;">实例</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&#39;/api&#39;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">target:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://jsonplaceholder.typicode.com&#39;,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">changeOrigin:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">configure:</span><span style="color:#24292E;"> (proxy, </span><span style="color:#032F62;">options</span><span style="color:#24292E;">) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">proxy</span><span style="color:#24292E;"> </span><span style="color:#032F62;">是</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http-proxy&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">的实例</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">代理</span><span style="color:#24292E;"> </span><span style="color:#032F62;">websockets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">或</span><span style="color:#24292E;"> </span><span style="color:#032F62;">socket.io</span><span style="color:#24292E;"> </span><span style="color:#032F62;">写法：ws://localhost:5173/socket.io</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ws://localhost:5174/socket.io</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&#39;/socket.io&#39;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">target:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ws://localhost:5174&#39;,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">ws:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="多个server-api文件配置" tabindex="-1">多个server api文件配置 <a class="header-anchor" href="#多个server-api文件配置" aria-label="Permalink to &quot;多个server api文件配置&quot;">​</a></h2><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">port:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8080</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">设置服务启动端口号</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">open:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">设置服务启动时是否自动打开浏览器</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cors:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">允许跨域</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">设置代理，根据我们项目实际情况配置</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">//第一访问地址</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">&#39;/api&#39;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//apiTest是自行设置的请求前缀，按照这个来匹配请求，有这个字段的请求，就会进到代理来</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">target:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https://api.apiopen.top/&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">需要代理的域名</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">changeOrigin:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">是否跨域</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">rewrite:</span><span style="color:#E1E4E8;"> (path) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> path.replace(</span><span style="color:#B392F0;">/^\\/api/,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">), //重写匹配的字段，如果不需要放在请求路径上，可以重写为</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">//第二访问地址，以此类推可写多个</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">&#39;^/amap/.*&#39;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//amap是自行设置的请求前缀，按照这个来匹配请求，有这个字段的请求，就会进到代理来</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">target:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https://restapi.amap.com&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">需要代理的域名</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">changeOrigin:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">是否跨域</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">rewrite:</span><span style="color:#E1E4E8;"> (path) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> path.replace(</span><span style="color:#B392F0;">/^\\/amap/,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">), //重写匹配的字段，如果不需要放在请求路径上，可以重写为</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">port:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8080</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">设置服务启动端口号</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">open:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">设置服务启动时是否自动打开浏览器</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cors:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">允许跨域</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">设置代理，根据我们项目实际情况配置</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">//第一访问地址</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&#39;/api&#39;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//apiTest是自行设置的请求前缀，按照这个来匹配请求，有这个字段的请求，就会进到代理来</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">target:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https://api.apiopen.top/&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">需要代理的域名</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">changeOrigin:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">是否跨域</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">rewrite:</span><span style="color:#24292E;"> (path) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> path.replace(</span><span style="color:#6F42C1;">/^\\/api/,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">), //重写匹配的字段，如果不需要放在请求路径上，可以重写为</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">//第二访问地址，以此类推可写多个</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&#39;^/amap/.*&#39;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//amap是自行设置的请求前缀，按照这个来匹配请求，有这个字段的请求，就会进到代理来</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">target:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https://restapi.amap.com&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">需要代理的域名</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">changeOrigin:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">是否跨域</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">rewrite:</span><span style="color:#24292E;"> (path) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> path.replace(</span><span style="color:#6F42C1;">/^\\/amap/,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">), //重写匹配的字段，如果不需要放在请求路径上，可以重写为</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre></div>`,6),e=[o];function t(c,r,E,y,F,i){return a(),n("div",null,e)}const h=s(l,[["render",t]]);export{B as __pageData,h as default};
