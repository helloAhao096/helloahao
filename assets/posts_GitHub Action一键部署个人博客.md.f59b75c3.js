import{_ as s,c as a,o as n,b as l}from"./app.d864492c.js";const p="/helloahao/assets/page_settion1.d85d2d91.png",o="/helloahao/assets/page_settion2.ab774188.png",e="/helloahao/assets/package-lock.859f89e7.png",t="/helloahao/assets/permissions.bbf361b7.png",u=JSON.parse('{"title":"GitHub Action一键部署个人博客","description":"GitHub Action 部署 个人博客 踩坑 教程","frontmatter":{"title":"GitHub Action一键部署个人博客","description":"GitHub Action 部署 个人博客 踩坑 教程","date":"2023-03-13T00:00:00.000Z","tags":["博客搭建","Github"]},"headers":[{"level":2,"title":"文档","slug":"文档","link":"#文档","children":[]},{"level":2,"title":"部署案例","slug":"部署案例","link":"#部署案例","children":[]},{"level":2,"title":"踩坑总结","slug":"踩坑总结","link":"#踩坑总结","children":[]}],"relativePath":"posts/GitHub Action一键部署个人博客.md","lastUpdated":1678800360000}'),c={name:"posts/GitHub Action一键部署个人博客.md"},i=l(`<h1 id="github-action基本介绍" tabindex="-1">GitHub Action基本介绍 <a class="header-anchor" href="#github-action基本介绍" aria-hidden="true">#</a></h1><h2 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-hidden="true">#</a></h2><ul><li>GitHub Action官方文档（英文）</li></ul><p>文档地址：<a href="https://docs.github.com/zh/actions/quickstart" target="_blank" rel="noreferrer">https://docs.github.com/zh/actions/quickstart</a></p><ul><li>阮一峰GitHub Action入门教程（中文）</li></ul><p>文档地址：<a href="https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noreferrer">https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html</a></p><hr><p><em><strong>本网站使用Github Action一键部署，将其为例，以下介绍详细配置</strong></em></p><h2 id="部署案例" tabindex="-1">部署案例 <a class="header-anchor" href="#部署案例" aria-hidden="true">#</a></h2><ol><li><p>部署配置文件：</p><p>（本博客使用actions-gh-pages配置文件/任选其一即可）</p><p>在博客项目代码推送后一键部署并且创建gh-pages分支,无需手动创建gh-pages分支</p><ul><li>vitepress配置文件：<a href="https://vitepress.dev/guide/deploy#github-pages" target="_blank" rel="noreferrer">https://vitepress.dev/guide/deploy#github-pages</a></li></ul><p>十分不好用，不知道是不是我不会用的原因，但是个是对小白来说，该文档就只有最基础的配置</p><ul><li>actions-gh-pages配置文件(github开源项目)：<a href="https://github.com/peaceiris/actions-gh-pages" target="_blank" rel="noreferrer">https://github.com/peaceiris/actions-gh-pages</a></li></ul></li><li><p>在项目根目录创建deploy.yml部署文件</p><p>需要同步到git中，推送至代码仓库</p></li></ol><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># .github &gt; workflows &gt; deploy.yml</span></span>
<span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Deploy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">branches</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">master</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">deploy</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/checkout@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">fetch-depth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/setup-node@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">node-version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">cache</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm install --frozen-lockfile</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Build</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm run docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Deploy</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;"># 将构建产物 commit 到一个分支上，用于发布静态站点资源</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;"># https://github.com/peaceiris/actions-gh-pages</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">#不要将peaceiris改为自己的仓库名，我单纯的以为这个需要改成自己的仓库名，部署上去就build失败了，需引用该仓库的配置</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">peaceiris/actions-gh-pages@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;"># Github 会在 workflow 中自动生成 GIHUBT_TOKEN，用于认证 workflow 的运行</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">github_token</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">\${{ secrets.GITHUB_TOKEN }}</span></span>
<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;"># 静态资源目录设置</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">publish_dir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs/.vitepress/dist</span></span>
<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;"># 默认发布到 gh-pages 分支上，可以指定特定的发布分支（不能选拉取代码的分支）</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">publish_branch</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gh-pages</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">full_commit_message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">\${{ github.event.head_commit.message }}</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li><p>将博客项目推送至创建好的仓库</p><p>不需要像网上一样，创建<code>xxx.github.io</code>设为仓库名，直接创建项目，会直接将仓库名设置为二级域名</p><p>例如本博客，仓库名为<code>helloahao</code>，则子域名自动生成为<code>helloahao.github.io</code></p><ul><li>需要在repo setting中详细配置</li></ul><ol><li>选择代码仓库的Settings <img src="`+p+'" alt="img.png"></li><li>选择pages</li><li>来源选择为一个分支</li><li>选择由action生成的gh-pages分支 <img src="'+o+'" alt="img.png"></li></ol></li></ol><hr><h2 id="踩坑总结" tabindex="-1">踩坑总结 <a class="header-anchor" href="#踩坑总结" aria-hidden="true">#</a></h2><p>搭建博客全部踩坑经历，血泪史记录一下</p><ol><li><p><code>package-lock.json</code>记得上传到代码仓库，不然github action无法构建项目</p><p>平时做项目的时候，只会关注<code>package.json</code>，下意识的以为<code>package-lock.json</code>是不需要的，但是github action需要这个文件构建项目 <img src="'+e+`" alt="img.png"></p></li><li><p>生成的gh-pages分支要开读写权限，不然生成的代码push不上去</p><p>参考：<a href="https://blog.csdn.net/weixin_42282187/article/details/124766382" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_42282187/article/details/124766382</a></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Error: Action failed with &quot;The process &#39;/usr/bin/git&#39; failed with exit code 128&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">The requested URL returned error: 403</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>解决方案： 转到存储库Setting 选择Actions&gt;&gt;&gt;General 在&quot;工作流权限(Workflow permissions)&quot;中，选择Read and write permissions <img src="`+t+'" alt="img.png"></p></li><li><p>有的教程在deploy.yaml中写 <code>npm run docs:build</code>，不用run关键词，直接跑，我一开始还以为yaml的run字段会补全该功能，直接报错 <code>[error]Process completed with exit code 1.</code></p></li><li><p>网上搜到的什么deploy.sh根本不好用，我尝试过配置shell脚本，完全不好用，github action直接一步到位，参考本博客即可</p></li></ol>',16),r=[i];function y(D,h,C,g,A,d){return n(),a("div",null,r)}const b=s(c,[["render",y]]);export{u as __pageData,b as default};
